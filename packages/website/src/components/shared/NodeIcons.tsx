import {
  FaSolidArrowsLeftRight,
  FaSolidBox,
  FaSolidCalculator,
  FaSolidEquals,
  FaSolidGreaterThanEqual,
  FaSolidMagnifyingGlass,
  FaSolidSkullCrossbones,
  FaSolidToggleOn,
  FaSolidUpRightFromSquare,
  FaSolidCircleExclamation,
  FaSolidArrowRight,
  FaSolidArrowLeft,
  FaSolidQuoteLeft,
  FaSolidDownLeftAndUpRightToCenter,
  FaSolidSignsPost,
  FaSolidRuler,
  FaSolidCircleCheck,
  FaSolidTriangleExclamation,
  FaSolidGlobe,
  FaSolidListOl,
  FaSolidMattressPillow,
  FaSolidKeyboard,
  FaSolidStrikethrough,
  FaSolidHashtag,
  FaSolidShuffle,
  FaSolidArrowRightToBracket,
  FaSolidArrowRightFromBracket,
  FaSolidCommentDots,
  FaSolidObjectUngroup,
  FaSolidIndent,
  FaSolidWandMagicSparkles,
  FaSolidFile,
  FaSolidPersonDigging,
  FaSolidToggleOff,
  FaSolidDiagramSuccessor,
  FaSolidArrowDownAZ,
  FaBrandsDiscord,
  FaSolidFileArrowDown,
  FaSolidFileCircleCheck,
  FaSolidFileCircleQuestion,
  FaSolidFileCircleXmark,
  FaSolidFileCirclePlus,
  FaSolidFileExcel,
} from "solid-icons/fa";

export const Icons_Dict = {
  list_length: FaSolidArrowsLeftRight,
  variable_extraction: FaSolidUpRightFromSquare,
  string_interpolation: FaSolidQuoteLeft,
  http_request: FaSolidGlobe,
  is_nan: FaSolidTriangleExclamation,
  truthiness: FaSolidCircleCheck,
  variable_remapping: FaSolidSignsPost,
  string_length: FaSolidRuler,
  string_concat: FaSolidDownLeftAndUpRightToCenter,
  list_head_separation: FaSolidArrowLeft,
  is_finite: FaSolidSkullCrossbones,
  list_tail_separation: FaSolidArrowRight,
  negation: FaSolidCircleExclamation,
  equals: FaSolidEquals,
  string_contains: FaSolidMagnifyingGlass,
  number_comparison: FaSolidGreaterThanEqual,
  math: FaSolidCalculator,
  boolean_operation: FaSolidToggleOn,
  optional_or_else: FaSolidBox,
  ["value_provider_Optional[number]"]: FaSolidListOl,
  ["value_provider_Optional[boolean]"]: FaSolidMattressPillow,
  ["value_provider_Optional[string]"]: FaSolidKeyboard,
  ["value_replacer_Optional[string]"]: FaSolidStrikethrough,
  ["value_replacer_Optional[number]"]: FaSolidHashtag,
  ["value_replacer_Optional[boolean]"]: FaSolidShuffle,
  webhook_start: FaSolidArrowRightToBracket,
  webhook_end: FaSolidArrowRightFromBracket,
  parse_string_to_number: FaSolidCommentDots,
  object_set_value: FaSolidObjectUngroup,
  value_provider_number: FaSolidListOl,
  get_at_index: FaSolidIndent,
  value_provider_string: FaSolidKeyboard,
  value_replacer_boolean: FaSolidWandMagicSparkles,
  value_replacer_number: FaSolidWandMagicSparkles,
  value_replacer_string: FaSolidWandMagicSparkles,
  empty_list: FaSolidFile,
  list_mapping: FaSolidPersonDigging,
  value_provider_boolean: FaSolidToggleOff,
  list_set_operation: FaSolidDiagramSuccessor,
  list_sort: FaSolidArrowDownAZ,
  ["discord.receive_command"]: FaBrandsDiscord,
  ["discord.reply_to_command"]: FaBrandsDiscord,
  ["discord.send_message"]: FaBrandsDiscord,
  ["discord.apply_role"]: FaBrandsDiscord,
  ["discord.users_with_role"]: FaBrandsDiscord,
  ["discord.receive_message"]: FaBrandsDiscord,
  ["discord.react_to_message"]: FaBrandsDiscord,
  ["discord.reply_to_message"]: FaBrandsDiscord,
  ["discord.create_embed"]: FaBrandsDiscord,
  ["discord.guild_id"]: FaBrandsDiscord,
  ["discord.channel_id"]: FaBrandsDiscord,
  ["discord.users_id"]: FaBrandsDiscord,
  ["discord.role_id"]: FaBrandsDiscord,
  ["discord.emoji_id"]: FaBrandsDiscord,
  ["discord.slash_command_event"]: FaBrandsDiscord,
  ["discord.message"]: FaBrandsDiscord,
  ["discord.message_embed"]: FaBrandsDiscord,
  get_flow_data: FaSolidFileArrowDown,
  set_flow_data: FaSolidFileCircleCheck,
  contains_flow_data: FaSolidFileCircleQuestion,
  remove_flow_data: FaSolidFileCircleXmark,
  increment_flow_data: FaSolidFileCirclePlus,
  multiply_flow_data: FaSolidFileExcel,
};
